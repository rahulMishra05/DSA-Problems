                NOTES
*********************************************************************************************************************

1. Merge Sort: 
    @ In merge sort what we is that we divide the array into two parts 
        and after dividing that array into two parts we again apply merge sort on them.

2. Sudo code:
    MergeSort(arr[], l, r){
        if(l < r){
            mid = (l + r)/2
            MergeSort(arr[], l, mid)
            MergeSort(arr[], mid+1, r)

            MergeSort(arr[], l, mid, r)
        }
    }

3. In merge sort we have a function which merge two sorted array.

4. Quick sort: The idea behind quick sort algorithm is that, the element should be 
    greater than the elements present on its left and smaller than the elements present at its right.
    If this is true than that element is in sorted position, rest all the elements may be sorted or may 
    not be sorted. 
    @ Quick Sort is a divide and conqure algorithm
    @ Sudo code:
    
    partition(l,h){
        pivot = a[l];
        i = l; j = h;
        while(i<j){
            do{
                i++;
            }while(A[i]<=pivot);

            do{
                j--;
            }while(A[j]>pivot);
            if(i<j){
                swap(A[i], A[j]);
            }
        }

        return j;
    }

    quickSort(l,h){
        if(l<h){
            j=partition(l,h);
            quickSort(l,j);
            quickSort(j+1, h);
        }
    }