		Notes of Array

1. Array: It is a list of variables of similar types

2. Time complexity of linear search is O(n)

3. To implement binary search the elements in the array should be present in sorted order.

4. Time complexity of binary search is O(log(n))

5. Selection Swap: Find the minimum element in unsorted array and wap
	it with element at begining.

6. Bubble Sort: Reapetedly swap two adjacent elements if they are in wrong order.
	@ After the first pass the largest element will come at the last position.
	@ We will repeat this step, untill we get a completely sorted array.
	@ If the lenght of our array is "n", then we have to do "n-1" iteration to get sorted array.

7. Insertion Sort: Insert an element from unsorted array to its correct position in sorted array.

8. Subarray: Continuous part of the array.
	@ Number of subarrays of an array with n elements = nC2 + n = n*(n+1) / 2

9. Subsequence: A subsequence is a sequence that can be derived an array by selecting zero or more
	elements, without changing the order of the remaining elements.
	@ Number of subsequences of an array with n elements = 2^n

**NOTE**: Every subarray is a subsequence but every subsequence is not a subarray.

10. Sprial Order Matrix Traversal:
	@ row_start + 1
	@ column_end -1
	@ row_end - 1
	@ column_start + 1

	# row_start <= row_end
	# column_start <= colunm_end

11. Character array: Character array are array of characters
	@ We declare n+1 size of the array, because the last element is null character.
	@ Last element is null element, because character array contains sentense and sentence have spaces
		So if when the sentence ends compiler will not understand that whether the sentence has been ended or more 
		characters are there to be inserted.
	